#!/bin/bash

(( BASH_VERSINFO[0] < 4 )) && echo "Bash 4+ required." && exit 1


# ----------------------------------------------------------------------
# ------------------ configuration settings for webcam -----------------
# ----------------------------------------------------------------------

V4L2_WEBCAM=/dev/video0


# ----------------------------------------------------------------------
# ------------------------- commands for webcam ------------------------
# ----------------------------------------------------------------------

x_detect() { gphoto2 --auto-detect; }

x_status() { gphoto2 --summary; }

x_start() { gphoto2 --stdout --capture-movie | ffmpeg -i - -vcodec rawvideo -pix_fmt yuv420p -threads 0 -f v4l2 "$V4L2_WEBCAM"; }


# ----------------------------------------------------------------------
# --------------------- handling command line args ---------------------
# ----------------------------------------------------------------------

## parse the webcam file and store the commands
while IFS= read -r line; do
    [[ $line =~ ^declare\ -f\ x_ ]] || continue
    COMMANDS+=( "${line##declare -f x_}" )
done < <(declare -F)
mapfile -t COMMANDS < \
    <(LC_COLLATE=C sort < <(printf "%s\n" "${COMMANDS[@]}"))

## check if there is command given
if [[ -n "$1" ]]; then

    ## shows usage of webcam
    if [[ "$1" == "--help" || "$1" == "-h" ]]; then
        echo "
        commands:
        detect    :    detects the camera connected to the system's USB bus 
        status    :    shows a summary of the connected camera
        start     :    starts the webcam on video device "$V4L2_WEBCAM"
        "
        exit 0
    fi

    ## no valid options were given, check and see if the arg is a valid command
    declare CMD="$1"; shift

    ## command is not valid, reccomend to look at usage
    if [[ ! "${COMMANDS[*]}" =~ "$CMD" ]]; then
        echo "invalid usage: -h or --help for help"
        exit 0
    fi

    for c in "${COMMANDS[@]}"; do
        ## excecute proper x_command()
        if [[ $c == "$CMD" ]]; then
            "x_$CMD" "$@"
            exit $?
        fi
    done
fi

## no command provided, reccomend to look at usage
echo "invalid usage: -h or --help for help"
